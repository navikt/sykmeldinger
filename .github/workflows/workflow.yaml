name: Push
on: push
env:
  DOCKER_IMAGE: ghcr.io/navikt/sykmeldinger:${{ github.sha }}
  NPM_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
jobs:
  snyk-monitor:
    if: github.ref == 'refs/heads/main'
    name: monitor dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: monitor
          args: --org=teamsykmelding --severity-threshold=high --all-projects
  snyk-test:
    name: analyze dependencies
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          command: test
          args: --org=teamsykmelding --severity-threshold=high --all-projects
  build-and-publish:
    name: Bygg, test og push Docker image
    runs-on: ubuntu-latest
    permissions:
      packages: 'write'
      contents: 'read'
      id-token: 'write'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: .yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn --immutable
      - run: yarn lint
      - run: yarn test
      - run: yarn build
      - name: Report debt
        run: ./scripts/debt.sh >> $GITHUB_STEP_SUMMARY
      - name: Upload static files to NAV CDN
        uses: navikt/frontend/actions/cdn-upload/v1@main
        with:
          cdn-team-name: teamsykmelding
          source: ./.next/static
          destination: '/sykmeldinger/_next'
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and publish Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_IMAGE }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            "NPM_AUTH_TOKEN=${{ secrets.READER_TOKEN }}"

  deploy-to-dev-gcp:
    if: ${{ !startsWith(github.ref , 'refs/heads/labs') }}
    name: Deploy to dev-gcp
    needs: [build-and-publish, snyk-test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: nais-dev-gcp.yaml
          VAR: image=${{ env.DOCKER_IMAGE }},version=${{ github.sha }}

  deploy-to-main-labs-gcp:
    if: github.ref_name == 'main'
    name: Deploy to labs-gcp (Demo)
    needs: [build-and-publish, snyk-test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v1
        env:
          DEPLOY_SERVER: deploy.nais.io:443
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: labs-gcp
          RESOURCE: nais-labs.yaml
          VAR: image=${{ env.DOCKER_IMAGE }},ingress=https://sykmeldinger.labs.nais.io,appname=sykmeldinger,replicas=1,branchState=alive

  deploy-to-labs-gcp:
    if: startsWith(github.ref_name, 'labs')
    name: Deploy branch to labs-gcp (Demo)
    needs: [build-and-publish, snyk-test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: gacts/github-slug@v1
        id: slug
        with:
          to-slug: sykmeldinger-${{ github.ref_name }}
      - uses: nais/deploy/actions/deploy@v1
        env:
          DEPLOY_SERVER: deploy.nais.io:443
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: labs-gcp
          RESOURCE: nais-labs.yaml
          VAR: image=${{ env.DOCKER_IMAGE }},ingress=https://${{ steps.slug.outputs.slug }}.labs.nais.io,appname=${{ steps.slug.outputs.slug }},replicas=1,branchState=alive

  deploy-to-prod-gcp:
    if: github.ref == 'refs/heads/main'
    name: Deploy to prod
    needs: [build-and-publish, snyk-test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: nais-prod.yaml
          VAR: image=${{ env.DOCKER_IMAGE }},version=${{ github.sha }}
